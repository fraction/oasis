{"version":1,"ops":[{"type":6,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579024209,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNzY1NTM0Mg=="},"target":"94d32393110658f3837d516dcf9596423aa0257e092981d0175cf7a2e245245d","message":"**What's the problem you want to solved?** Learning a development process is hard work and it's easier when we can outline our needs more explicitly. It would be great to have a development process in this app (that I'd love to also add to SSB-CLI and friends).\n\n**Is there a solution you'd like to recommend?** Since reading about the [Collective Code Construction Contract](https://github.com/zeromq/rfc/tree/master/42) I've been really itching to try it out. There's more info about it [here](https://hintjens.gitbooks.io/social-architecture/content/chapter4.html), but the gist is \"patches should solve problems and pass tests, maintainers should merge all correct patches ASAP after review for **correctness only**\". I don't want to be a source of truth for this module and it's important to me that I'm not a bottleneck.\n\nThe only changes to C4 that I'd propose: \n\n\u003e A patch commit message MUST consist of a single short (less than 50 characters) line stating the problem (\"Problem: ...\") being solved, followed by a blank line and then the proposed solution (\"Solution: ...\").\n\nCommits in this format would be rad, but I can't imagine telling someone to amend their commit to follow this format. I think I'd like for \"MUST\" to be replaced with \"SHOULD\".\n\n\u003e The project SHALL NOT use topic branches for any reason. Personal forks MAY use topic branches.\n\nIn my experience the project repository is a very convenient place to push your topic branches. I'd be comfortable removing this rule.\n\n\u003e Maintainers SHOULD NOT merge their own patches except in exceptional cases, such as non-responsiveness from other Maintainers for an extended period (more than 1-2 days).\n\nI don't know about this one, to be honest. It's probably fine if you have a bunch of hyper-active maintainers, but right now I think this would mean that I'd be merging lots of my own PRs.\n\ncc: @jedahan @trashhalo @cinnamon-bun @stripedpajamas @mycognosist @aadilayub","files":null},{"type":5,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579023662,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI5NDgwMTAyMDE="},"added":["topic:enhancement"],"removed":[]},{"type":5,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579023662,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI5NDgwMTAyMDM="},"added":["help wanted"],"removed":[]},{"type":5,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579023662,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI5NDgwMTAyMDU="},"added":["topic:question"],"removed":[]},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579025272,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDMwMTQ1OQ==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574301459"},"message":"Thanks for starting this!\n\nI might even go a step further, and allow for merging of branches that are 'incorrect' but do not break anything. In other words, do not solve the problem, but are a starting point to solving a problem.\n\nI like the change for MUST, I am not sure about the change for branches. Personally it feels good but I'm gonna print out the book and read over it before forming an opinion.","files":null},{"type":3,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579025873,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDMwNTUyNw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574305527"},"message":"\u003e In other words, do not solve the problem, but are a starting point to solving a problem.\n\nI think I'm with you, but could you give an example to make sure I'm on the same page with you? As long as it passes tests and it's an improvement (i.e. it solves *some* problem), I think that's a solid candidate for merging.\n\n\u003e Personally it feels good but I'm gonna print out the book and read over it before forming an opinion.\n\nCool! I think the *Social Architecture* book is mostly reflections and thoughts from Pieter Hintjens, and so I've linked the \"chapter\" that talks about C4, but the whole thing is pretty good and gives me strong SSB vibes. I'd be curious to hear what your thoughts are, thanks for this quick feedback!","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579054836,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2NDY3NA==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574464674"},"message":"Lets say someone wanted to make a fallback to show a unique colored shape when profile images were not found, but their PR just drew the same shape for everyone. In this way, its not working as intended, but it is not breaking anything. Err on the side of merging first, and improving in a followup. The benefit is an immediate sense of appreciation and gratification, which is especially important for first time contributors. There are other benefits to the followup as well (giving responsibility that can turn drive-by contributors into longer term, if they want).","files":null},{"type":3,"author":{"id":"0545b519300de7456097c1900e58ca397b760668"},"timestamp":1579054853,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2NDY5Nw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574464697"},"message":"\u003e The project SHALL NOT use topic branches for any reason. Personal forks MAY use topic branches.\nI don't understand the point of granting me permission to make branches on my fork. \n\nForks vs topic branches are mostly a shrug emoji for me. I defer to your preference.\n\n\u003e Commits in this format would be rad, but I...\nI appreciate the relaxing of this. I think it wouldn't be very welcoming if someone put the effort in the contribute and our response is change your commit messages to meet our contract.","files":null},{"type":6,"author":{"id":"0545b519300de7456097c1900e58ca397b760668"},"timestamp":1579054853,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNzg5OTYxOA=="},"target":"f5c5d4904fdfae9d3a14256fe4ec82bf1890856686dd5338539b5be88ec6c10f","message":"\u003e The project SHALL NOT use topic branches for any reason. Personal forks MAY use topic branches.\nI don't understand the point of granting me permission to make branches on my fork. \n\nForks vs topic branches are mostly a shrug emoji for me. I defer to your preference.\n\n\u003e Commits in this format would be rad, but I...\n\nI appreciate the relaxing of this. I think it wouldn't be very welcoming if someone put the effort in the contribute and our response is change your commit messages to meet our contract.","files":null},{"type":6,"author":{"id":"0545b519300de7456097c1900e58ca397b760668"},"timestamp":1579054882,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNzg5OTc1Mw=="},"target":"f5c5d4904fdfae9d3a14256fe4ec82bf1890856686dd5338539b5be88ec6c10f","message":"\u003e The project SHALL NOT use topic branches for any reason. Personal forks MAY use topic branches.\n\nI don't understand the point of granting me permission to make branches on my fork. \n\nForks vs topic branches are mostly a shrug emoji for me. I defer to your preference.\n\n\u003e Commits in this format would be rad, but I...\n\nI appreciate the relaxing of this. I think it wouldn't be very welcoming if someone put the effort in the contribute and our response is change your commit messages to meet our contract.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579055466,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2NzAzNA==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574467034"},"message":"I'm going to be super nit-picky and critical, but take all this with a grain of salt and the best of intentions. Overall, any explicit process and structure is a welcome improvement. I will be splitting up my thoughts over multiple comments so people can react and quote and digest different ideas accordingly - sorry for the spam.\n\nRe C4 itself - I am happy to see us build and adopt **an implementation** of C4 and use it to guide our process building. That said, I think the C4 document/verbiage should not be part of any artifacts we host or present, and we should just link to it with appropriate thanks to provide context on how we came to our implementation.\n\nThe reasons are subtle and likely overly personal and subjective, but boil down to a dislike of RFC2119 VERBIAGE and related expectations for newcomers. It's hard for me to put into writing, but I can attempt to again if people care.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579055648,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2NzcxNw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574467717"},"message":"### Regarding the implementation\n\nI am sure a lot of the following criticisms come from a lack of understanding the broader context, but hopefully they will be cleared up as I read deeper into the writing. I will try and frame things as questions first before jumping to conclusions.\n\nRegarding Maintainers vs Contributors - what is the goal here? To lower the barrier for number of participants in a project? To allow people who are Contributors to \"retire\" in a way to help prevent burnout? The second makes some sense to me, and would be nice to be articulated, since its not obvious the reason for the distinction.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579056098,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2OTM3NQ==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574469375"},"message":"I don't like the framing of everything as a problem to be solved. Sometimes its just an experiment or an idea to increase delight. In those cases, sure, someone could be \"Problem: Oasis isn't as delightful as it could be\", and indeed you have already proposed removing that frame from the patchset requirement. If this is a tradeoff that helps achieve the Goals, I'd love to hear the reasoning. Otherwise it seems we can come up with something better. I am not sure what exactly is 'better' though. If we just axed the word 'problem' and 'solution' it would make it a bit harder to come up with something precise, and I am struggling with finding something better.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579056237,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2OTg5MQ==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574469891"},"message":"I **love** the restriction that no one merges their own pull requests, and indeed most of 2.4 Development Process.\n\nWhat does 2.4.16(b) mean? Capturing toxic patches?","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579056393,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ3MDQ2NQ==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574470465"},"message":"2.5.1 - I would change the verbiage to 'default' branch, and in our case, would advocate for its name to be either 'main' or 'default'.\n2.5.2 - I appreciate relaxing the restriction, but would want to check why this was implemented in the first place - if having only one branch makes it easier for contributors, I'm okay with personally adding development friction.\n2.5.3 same comment as 2.5.1","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579057284,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ3MzU0NQ==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574473545"},"message":"\u003e ### Regarding the implementation\n\u003e \n\u003e I am sure a lot of the following criticisms come from a lack of understanding the broader context, but hopefully they will be cleared up as I read deeper into the writing. I will try and frame things as questions first before jumping to conclusions.\n\u003e \n\u003e Regarding Maintainers vs Contributors - what is the goal here? To lower the barrier for number of participants in a project? To allow people who are Contributors to \"retire\" in a way to help prevent burnout? The second makes some sense to me, and would be nice to be articulated, since its not obvious the reason for the distinction.\n\nAfter reading some of https://hintjens.gitbooks.io/social-architecture/content/chapter4.html , I found\n\n\u003e What we wanted to avoid was people pushing their changes directly to master\n\nSo to answer my own question:\n\nWhen someone participates in the community, especially when proposing a change, they are a Contributor.\n\nAnyone who has access to merge into the default branch, when doing so, is a Maintainer.\n\nA Maintainer is not allowed to merge their own Contributions.\n\nWhat was confusing to me, was I had preconceived notions of hierarchy, ability, and responsibility assigned to those two words.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579058212,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ3NDI4OA==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574474288"},"message":"\u003e Each Contributor SHALL be responsible for identifying themselves in the project Contributor list\n\nThis might be important at scale, but when the community is small and someone submits a PR I make it an important point to credit at least in both the changelog and git log any contribution, even if the author is myself but the idea or issue came from someone else. I learned this from a popup 72 art residency and think we can relax this to SHOULD. Alternatively, we can, during an active PR, ask the contributor to add themselves to the appropriate place.","files":null},{"type":6,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579058212,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNzkxOTg4Mw=="},"target":"427e2cc6bde79a46dd6b6423ae19539636f2b2f1396b020f305a20afd0f1e500","message":"\u003e Each Contributor SHALL be responsible for identifying themselves in the project Contributor list\n\nThis might be important at scale, but when the community is small and someone submits a PR I make it an important point to credit at least in both the changelog and git log any contribution, even if the author is myself but the idea or issue came from someone else. I learned this from a popup 72 hour art residency and think we can relax this to SHOULD. Alternatively, we can, during an active PR, ask the contributor to add themselves to the appropriate place.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579057775,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDQ3NTEzMA==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574475130"},"message":"\u003e I don't like the framing of everything as a problem to be solved. Sometimes its just an experiment or an idea to increase delight. In those cases, sure, someone could be \"Problem: Oasis isn't as delightful as it could be\", and indeed you have already proposed removing that frame from the patchset requirement. If this is a tradeoff that helps achieve the Goals, I'd love to hear the reasoning. Otherwise it seems we can come up with something better. I am not sure what exactly is 'better' though. If we just axed the word 'problem' and 'solution' it would make it a bit harder to come up with something precise, and I am struggling with finding something better.\n\n\u003e This is a unapologetic ramming through of thirty years' software design experience. It's a profoundly simple approach to design: make minimal, accurate solutions to real problems, nothing more or less. In ZeroMQ, we don't have feature requests. Treating new features the same as bugs confuses some newcomers. But this process works, and not just in open source. Enunciating the problem we're trying to solve, with every single change, is key to deciding whether the change is worth making or not.\n\nSo the justification is \"This works, trust me\" with the caveat \"This will confuse newcomers\". I am open to trying to stick to it and see how it goes, as I am open to discussing the relative downsides of confusing newcomers.","files":null},{"type":6,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579057775,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNzkxNzIwNw=="},"target":"416c323229f0accdd9afbe34456e298d43d024fd787c6fb32483ff816b6fb36b","message":"\u003e I don't like the framing of everything as a problem to be solved. Sometimes its just an experiment or an idea to increase delight. In those cases, sure, someone could be \"Problem: Oasis isn't as delightful as it could be\", and indeed you have already proposed removing that frame from the patchset requirement. If this is a tradeoff that helps achieve the Goals, I'd love to hear the reasoning. Otherwise it seems we can come up with something better. I am not sure what exactly is 'better' though. If we just axed the word 'problem' and 'solution' it would make it a bit harder to come up with something precise, and I am struggling with finding something better.\n\n\u003e\u003e This is a unapologetic ramming through of thirty years' software design experience. It's a profoundly simple approach to design: make minimal, accurate solutions to real problems, nothing more or less. In ZeroMQ, we don't have feature requests. Treating new features the same as bugs confuses some newcomers. But this process works, and not just in open source. Enunciating the problem we're trying to solve, with every single change, is key to deciding whether the change is worth making or not.\n\nSo the justification is \"This works, trust me\" with the caveat \"This will confuse newcomers\". I am open to trying to stick to it and see how it goes, as I am open to discussing the relative downsides of confusing newcomers.","files":null},{"type":3,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579101398,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDcwNjA0Mw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574706043"},"message":"Thanks for all the thoughts! This was cool to wake up to. :sparkles:  I agree with most of what you said, I'll add some quick pre-coffee notes:\n\n\u003e Lets say someone wanted to make a fallback to show a unique colored shape when profile images were not found, but their PR just drew the same shape for everyone. In this way, its not working as intended, but it is not breaking anything.\n\nHell yeah. As long as a patch is an improvement I think we should just merge. Progress \u003e perfection.\n\n\u003e I think the C4 document/verbiage should not be part of any artifacts we host or present\n\nStrong agree that it shouldn't be a learning resource for new contributors, but I *do* like the idea of explicit expectations. I'm tempted to suggest that it would be fun to make it more friendly and less RFC-y, but I might be getting ahead of myself. I'm happy to keep the document/verbiage out of sight unless we improve it first. (tbh I've always wanted an explicit dev process that was friendly without being vague)\n\n\u003e I don't like the framing of everything as a problem to be solved.\n\nI've enjoyed this constraint so far, but I'd be open to changing it if we find something better. I know that lots of teams use *user stories*, but I think those are more business-y and less friendly than \"hey what's the problem you want to solve?\". I'd be excited if we could find a more optimistic way of asking this question, but everything I've thought of is just 'problem' with a layer of obfuscation. :grimacing: \n\n\u003e What does 2.4.16(b) mean? Capturing toxic patches?\n\nI'm not completely sure. *Social Architecture* mentions \"toxic patches\" in the context of copyright infringement of other projects, but also says: \"Trollish contributors who ignore the rules, and who write toxic patches\". Which rules?!\n\n:shrug:\n\nI'll probably ask some ZeroMQ folks what that's all about.\n\n\u003e I would change the verbiage to 'default' branch, and in our case, would advocate for its name to be either 'main' or 'default'.\n\nThis is really interesting. In a vacuum, `master` isn't a great name for the default branch, and so I'd be interested in changing it, but since it's a long-standing default I feel that it might be more user-friendly to just keep the default. Thanks for bringing this up, it's such an interesting tension. Last night I was reading about a Linux distro, [stali](https://sta.li/), which decided that the [Linux FHS](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard) sucks and decided to use [its own filesystem hierarchy standard](https://sta.li/filesystem/). Is that better because it's more reasonable? Or worse because it's confusing for people who learned the default (from experience, textbooks, online resources, etc)?\n\nAgain: :man_shrugging: \n\n\u003e Each Contributor SHALL be responsible for identifying themselves in the project Contributor list\n\nI took this to mean \"People other than the Contributor MAY NOT be responsible for identifying contributors in the project Contributor list\". *Social Architecture* described this as \"[...] the maintainers are not karma accountants. Anyone who wants credit has to claim it themselves\". Does that make it better?\n\n\u003e So the justification is \"This works, trust me\" with the caveat \"This will confuse newcomers\". I am open to trying to stick to it and see how it goes, as I am open to discussing the relative downsides of confusing newcomers.\n\n+1\n\nThe thing I liked is that I spend lots of time trying to untangle the [XY problem](https://en.wikipedia.org/wiki/XY_problem), and so I'm excited at the idea that issues = problems. I think this would also consolidate problem discussions, so you don't have multiple issues:\n\n- Add unique avatar for people without profile photos\n- Add colored background for people without profile photos\n- Hide broken image for people without profile photos\n\nInstead, it would just be \"Problem: broken images for people without profile photos isn't friendly, delightful, charming, or suave\", and we could all pile on with possible solutions in one thread. When the problem is solved, the issue is closed, and we don't have to hunt down the other feature-request issues that solve the same problem. With that said: **this is all fantasy so far, I'm happy to iterate and experiment, and I think it's wise + thoughtful of you to think of newcomers first**.","files":null},{"type":3,"author":{"id":"15be4af55ad83e3dbe17b7c1fb3a4889aa5fa3cd"},"timestamp":1579136377,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NDkyOTYwNw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-574929607"},"message":"I've wanted to try the C4 style for a while!\n\nTo merge code without paying much attention we'll need good test coverage \u0026 CI.  Hooray for recent work in this direction!  Still could use integration tests.\n\nI'd support having a list of trusted people who can merge their own relatively small PRs.  I'm concerned that we'll feel obligated to show up and review PRs so nobody is left waiting.  Once more people are participating we could get stricter about this.","files":null},{"type":3,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579472301,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NjA1MzYzMw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-576053633"},"message":"Just saw this, looks like it'd be simple to checkout PRs without anyone having anyone push directly to repo branches: https://stackoverflow.com/questions/27567846/how-can-i-check-out-a-github-pull-request-with-git\n\n\u003e  Still could use integration tests.\n\n+1\n\n\u003e I'd support having a list of trusted people who can merge their own relatively small PRs. I'm concerned that we'll feel obligated to show up and review PRs so nobody is left waiting. Once more people are participating we could get stricter about this.\n\n+1 to this too. I really dislike merging my own PRs without approval and would love to avoid normalizing it if possible. I've noticed that projects where maintainers often merge their own patches tend to feel isolating (for both the maintainers and contributors) and weird unspoken power dynamics.","files":null},{"type":3,"author":{"id":"4f506d936028410197b6fff70b94c3833432a95b"},"timestamp":1579638044,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3Njg2MzE2Nw==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-576863167"},"message":"C4 talks about a single platform, which is simple. Once we have a development process, it might be worth investigating if multiple platforms help or hurt scaling. Other potential platforms are gitlab (self hosted or otherwise), and glitch.","files":null},{"type":3,"author":{"id":"15be4af55ad83e3dbe17b7c1fb3a4889aa5fa3cd"},"timestamp":1579734332,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NzQyODE1OA==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-577428158"},"message":"Who are the Maintainers, is it the 3 of us?\n\nMy thinking is stuck in a consensus type model, I'm not used to C4's do-ocracy.  Just to be clear, does this mean I can just merge other people's PRs instead of waiting for discussion?  E.g. issues are the place for discussion, PRs can get merged by one reviewer without waiting for other reviewers to chime in?","files":null},{"type":3,"author":{"id":"6a0aeab8ae8e7bf93407c51e9b2a4d9d0273c9ad"},"timestamp":1579737619,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NzQ0Mjg4Mg==","github-url":"https://github.com/fraction/oasis/issues/54#issuecomment-577442882"},"message":"\u003e Who are the Maintainers, is it the 3 of us?\n\nYeah, I think anyone with write access. I've been giving write access to folks I trust after they contribute a patch, but we could change this in the future to avoid diluting the merge-sponsibility.\n\n\u003e  Just to be clear, does this mean I can just merge other people's PRs instead of waiting for discussion?\n\nYep, that sounds good to me. As long as the patch solves some sort of problem, and you think it's an improvement, I'd love for you to merge it. I'm thinking about this as hill climbing, where anyone can push us any [positive] direction, and if we spend too much time going back-and-forth on something then we should take a step back and discuss the long-term strategy.","files":null}]}