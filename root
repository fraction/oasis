{"version":1,"ops":[{"type":1,"author":{"id":"15be4af55ad83e3dbe17b7c1fb3a4889aa5fa3cd"},"timestamp":1579905608,"metadata":{"github-id":"MDU6SXNzdWU1NTQ5ODgzOTI=","github-url":"https://github.com/fraction/oasis/issues/78","origin":"github"},"title":"Conversation: Typescript","message":"I'm interested in converting some code to Typescript.  Thoughts?\n\n![pipe-labels](https://user-images.githubusercontent.com/32660718/73108438-39538900-3eb5-11ea-8d68-d41bfa72733c.jpg)\n\nLabeling your types makes it possible to understand code by looking locally, in one file, instead of having to read the whole project and keep it all in your head at once.  \n\nFor example when I wanted to add names to the peer list, I looked at code like this:\nhttps://github.com/fraction/oasis/blob/master/src/views/index.js#L177\n\nand had no idea what kind of thing a `peer` was or what properties it had.  I ran it with a `console.log` to find out, but that only showed me some of the possible variations of peer objects according to who was online at that moment.\n\nPersonally I find lack of types to be the biggest challenge in understanding SSB code.  It's a challenge to figure out which of the many modules are generating objects in the first place.\n\n**Upsides**\n* Easier to understand code, for people who can read Typescript\n* Fewer bugs at runtime\n\n**Drawbacks**\n* Contributors have to be able to read Typescript\n* Another dependency, another config file\n* Adds a build step (or use [ts-node](https://github.com/TypeStrong/ts-node) as a drop-in replacement for `node` which compiles for you)\n\nThere's also a middle path, [adding types in comments](https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html) within plain Javascript files.  This has its own different syntax that fewer people know, I think, but lets you run the code with no build step.\n```\n/** @type {string[]} */\nconst x = [];\n```\n\nI use TS in all my own projects and feel it helps a lot, but here the choice doesn't seem obvious.  I'm not pushing for it, but if others are excited I can help.","files":null}]}